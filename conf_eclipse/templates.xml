<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="aspectj" deleted="false" description="adviceexecution pointcut (AspectJ)" enabled="true" name="adviceexecution">adviceexecution()</template><template autoinsert="true" context="aspectj" deleted="false" description="after returning advice (AspectJ)" enabled="true" name="after_returning">after(${args}) returning() : ${pointcut_expression} {}</template><template autoinsert="true" context="aspectj" deleted="false" description="after throwing advice (AspectJ)" enabled="true" name="after_throwing">after(${args}) throwing() : ${pointcut_expression} {}</template><template autoinsert="true" context="aspectj" deleted="false" description="around advice (AspectJ)" enabled="true" name="around">around(${args}) : ${pointcut_expression} {}</template><template autoinsert="true" context="aspectj" deleted="false" description="before advice (AspectJ)" enabled="true" name="before">before(${args}) : ${pointcut_expression} {}</template><template autoinsert="true" context="aspectj" deleted="false" description="call constructor pointcut (AspectJ)" enabled="true" name="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="call method declaration (AspectJ)" enabled="true" name="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="cflow pointcut (AspectJ)" enabled="true" name="cflow">cflow(${pointcut_expression})</template><template autoinsert="true" context="aspectj" deleted="false" description="cflowbelow pointcut (AspectJ)" enabled="true" name="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert="true" context="aspectj" deleted="false" description="declare error (AspectJ)" enabled="true" name="dece">declare error : ${pointcut_expression} : "";</template><template autoinsert="true" context="aspectj" deleted="false" description="declare parents (AspectJ)" enabled="true" name="decp_extends">declare parents : ${type_pattern} extends ${type};</template><template autoinsert="true" context="aspectj" deleted="false" description="declare parents (AspectJ)" enabled="true" name="decp_implements">declare parents : ${type_pattern} implements ${type};</template><template autoinsert="true" context="aspectj" deleted="false" description="declare soft (AspectJ)" enabled="true" name="decs">declare soft : ${exception_type} : ${pointcut_expression};</template><template autoinsert="true" context="aspectj" deleted="false" description="declare warning (AspectJ)" enabled="true" name="decw">declare warning : ${pointcut_expression} : "";</template><template autoinsert="true" context="aspectj" deleted="false" description="execution of a constructor pointcut (AspectJ)" enabled="true" name="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="execution of a method pointcut (AspectJ)" enabled="true" name="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="get pointcut (AspectJ)" enabled="true" name="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert="true" context="aspectj" deleted="false" description="handler pointcut (AspectJ)" enabled="true" name="handler">handler(${type_pattern})</template><template autoinsert="true" context="aspectj" deleted="false" description="initialization pointcut (AspectJ)" enabled="true" name="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="pointcut declaration (AspectJ)" enabled="true" name="pc">pointcut ${name}() : ${pointcut_expression};</template><template autoinsert="true" context="aspectj" deleted="false" description="percflow (AspectJ)" enabled="true" name="percflow">percflow(${pointcut_expression})</template><template autoinsert="true" context="aspectj" deleted="false" description="percflowbelow (AspectJ)" enabled="true" name="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert="true" context="aspectj" deleted="false" description="pertarget (AspectJ)" enabled="true" name="pertarget">pertarget(${pointcut_expression})</template><template autoinsert="true" context="aspectj" deleted="false" description="perthis (AspectJ)" enabled="true" name="perthis">perthis(${pointcut_expression})</template><template autoinsert="true" context="aspectj" deleted="false" description="pertypewithin (AspectJ)" enabled="true" name="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert="true" context="aspectj" deleted="false" description="pointcut (AspectJ)" enabled="true" name="pointcut">pointcut ${name}(${args}) : ${pointcut_expression};</template><template autoinsert="true" context="aspectj" deleted="false" description="preinitialization pointcut (AspectJ)" enabled="true" name="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="set pointcut (AspectJ)" enabled="true" name="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert="true" context="aspectj" deleted="false" description="staticinitialization pointcut (AspectJ)" enabled="true" name="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert="true" context="aspectj" deleted="false" description="thisJoinPoint (AspectJ)" enabled="true" name="thisJoinPoint">thisJoinPoint</template><template autoinsert="true" context="aspectj" deleted="false" description="thisJoinPointStaticPart (AspectJ)" enabled="true" name="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert="true" context="aspectj" deleted="false" description="within pointcut (AspectJ)" enabled="true" name="within">within(${type_pattern})</template><template autoinsert="true" context="aspectj" deleted="false" description="withincode of a constructor pointcut (AspectJ)" enabled="true" name="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert="true" context="aspectj" deleted="false" description="withincode of a method pointcut (AspectJ)" enabled="true" name="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert="false" context="java" deleted="false" description="create new object" enabled="true" id="org.eclipse.jdt.ui.templates.new" name="new">${type} ${name} = new ${type}(${});</template><template autoinsert="false" context="java" deleted="false" description="convert collection to array" enabled="true" id="org.eclipse.jdt.ui.templates.toarray" name="toarray">(${type:elemType(collection)}[]) ${collection}.toArray(new ${type}[${collection}.size()])</template><template autoinsert="false" context="java" deleted="false" description="non-externalized string marker" enabled="true" id="org.eclipse.jdt.ui.templates.non-nls" name="nls">//$$NON-NLS-${N}$$</template><template autoinsert="false" context="java" deleted="false" description="runnable" enabled="true" id="org.eclipse.jdt.ui.templates.runnable" name="runnable">new Runnable() {
	public void run() {
		${line_selection}
	}
}</template><template autoinsert="true" context="java" deleted="false" description="sd" enabled="true" name="shouldMockSpring">

@${testType:newType(org.junit.Test)}
public void should${CheckThisAndThat}() {
    // Given
    ${staticImport:importStatic('org.hamcrest.MatcherAssert.*','org.hamcrest.Matchers.*','org.assertj.core.api.Assertions.assertThat')}
    // When
    // Then
}
${:import(org.junit.Test, org.junit.Before, org.junit.runner.RunWith,org.mockito.InjectMocks,org.mockito.Mock, org.mockito.MockitoAnnotations)

}</template><template autoinsert="true" context="java" deleted="false" description="Hide Middle Man– Inline Method – Replace Delegation with Inheritance" enabled="true" name="Middle Man">// ${todo} Middle man ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Classes using too many things that should be private in other classes Refactorings : Move Method Move Field Change Bidirectional Association to Unidirectional Replace Inheritance with Delegation Hide Delegate" enabled="true" name="Inappropriate Intimacy">// ${todo} Inappropriate Intimacy ${time}  ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="Alternative class">// ${todo} Alternative class with different interfaces ${time}  ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="DataClass">// ${todo} Data clazz ${time}  ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="RefusedBequest">// ${todo} Refused Bequest ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="– Extract Method – Introduce Assertion" enabled="true" name="Comments">// ${todo} Comments ${time}  ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Extract Method Extract Class Pull Up Method Form Template Method" enabled="true" name="DuplicatedCode">// ${todo} Duplicated Code ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Extract Method Replace Temp with Query Replace Method with Method Object Decompose Conditional" enabled="true" name="LongMethod">// ${todo} Long Method ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Extract Class Extract Subclass Extract Interface Replace Data Value with Object" enabled="true" name="LargeClass">// ${todo} Large Class ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Replace Parameter with Method – Introduce Parameter Object – Preserve Whole Object" enabled="true" name="Long Paremeter List">// ${todo} Long Parameter List ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="Divergent Change">// ${todo} Divergent Change ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Move Method – Move Field -  Inline Class" enabled="true" name="ShotgunSurgery">// ${todo} Shotgun Surgery ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="FeatureEnvy">// ${todo} Feature Envy ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Sets of variables usually passed together in multiple places • Refactorings– Extract Class – Introduce Parameter Object– Preserve Whole Object" enabled="true" name="DataClumps">// ${todo} Data Clumps ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="Primitive Obsession">// ${todo} Primitive Obsession ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Replace Conditional with Polymorphism Replace Type Code with Subclasses&#10;Replace Type Code with State/Strategy Replace Parameter with Explicit Methods Introduce Null Object" enabled="true" name="SwitchStatements">// ${todo} Switch Statements ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="ParallelInheritence">// ${todo} Parallel Inheritence Hierarchies ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="LazyClass">// ${todo} Lazy Class ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="SpeculativeGenerality">// ${todo} Speculative Generality Often  ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="TemporaryField">// ${todo} Temporary Field ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="MessageChains">// ${todo} Message Chains ${time} ${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Inline Class – Collapse Hierarchy" enabled="true" name="LazyClass">// ${todo} Lazy Class ${time} ${cursor}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate over array" enabled="true" id="org.eclipse.jdt.ui.templates.for_array" name="for">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${line_selection}${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate over array with temporary variable" enabled="true" id="org.eclipse.jdt.ui.templates.for_temp" name="for">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${array_type} ${array_element} = ${array}[${index}];
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate over collection" enabled="true" id="org.eclipse.jdt.ui.templates.for_collection" name="for">for (${iteratorType:newType(java.util.Iterator)} ${iterator} = ${collection}.iterator(); ${iterator}.hasNext(); ) {
	${type:elemType(collection)} ${name:newName(type)} = (${type}) ${iterator}.next();
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate over an array or Iterable" enabled="true" id="org.eclipse.jdt.ui.templates.for_iterable" name="foreach">for (${iterable_type} ${iterable_element} : ${iterable}) {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate with enumeration" enabled="true" id="org.eclipse.jdt.ui.templates.while_enumeration" name="while">while (${en:var(java.util.Enumeration)}.hasMoreElements()) {
	${type:argType(en)} ${elem:newName(type)} = (${type}) ${en}.nextElement();
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate with iterator" enabled="true" id="org.eclipse.jdt.ui.templates.while_iterator" name="while">while (${it:var(java.util.Iterator)}.hasNext()) {
	${type:argType(it)} ${elem:newName(type)} = (${type}) ${it}.next();
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="do while statement" enabled="true" id="org.eclipse.jdt.ui.templates.do" name="do">do {
	${line_selection}${cursor}
} while (${condition:var(boolean)});</template><template autoinsert="false" context="java-statements" deleted="false" description="switch case statement" enabled="true" id="org.eclipse.jdt.ui.templates.switch" name="switch">switch (${key}) {
	case ${value}:
		${cursor}
		break;

	default:
		break;
}</template><template autoinsert="false" context="java-statements" deleted="false" description="if statement" enabled="true" id="org.eclipse.jdt.ui.templates.if" name="if">if (${condition:var(boolean)}) {
	${line_selection}${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="if else statement" enabled="true" id="org.eclipse.jdt.ui.templates.ifelse" name="ifelse">if (${condition:var(boolean)}) {
	${cursor}
} else {
	
}</template><template autoinsert="false" context="java-statements" deleted="false" description="else if block" enabled="true" id="org.eclipse.jdt.ui.templates.elseif" name="elseif">else if (${condition:var(boolean)}) {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="else block" enabled="true" id="org.eclipse.jdt.ui.templates.else" name="else">else {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="try catch block" enabled="true" id="org.eclipse.jdt.ui.templates.try" name="try_catch">try {
	${line_selection}${cursor}
} catch (${Exception} ${exception_variable_name}) {
	// ${todo}: handle exception
}</template><template autoinsert="false" context="java-statements" deleted="false" description="try finally block" enabled="true" id="org.eclipse.jdt.ui.templates.tryfinally" name="try_finally">try {
	${line_selection}${cursor}
} finally {
	// ${todo}: handle finally clause
}</template><template autoinsert="false" context="java-statements" deleted="false" description="catch block" enabled="true" id="org.eclipse.jdt.ui.templates.catch" name="catch">catch (${Exception} ${exception_variable_name}) {
	${cursor}// ${todo}: handle exception
}</template><template autoinsert="false" context="java-statements" deleted="false" description="finally block" enabled="true" id="org.eclipse.jdt.ui.templates.finally" name="finally">finally {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="dynamic type test and cast" enabled="true" id="org.eclipse.jdt.ui.templates.instanceof" name="instanceof">if (${name:var} instanceof ${type}) {
	${type} ${new_name} = (${type})${name};
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="dynamic cast" enabled="true" id="org.eclipse.jdt.ui.templates.cast" name="cast">${type} ${new_name} = (${type}) ${name};</template><template autoinsert="false" context="java-statements" deleted="false" description="lazy creation" enabled="true" id="org.eclipse.jdt.ui.templates.lazy" name="lazy">if (${name:var} == null) {
	${name} = new ${type}(${arguments});
	${cursor}
}

return ${name};</template><template autoinsert="true" context="java-statements" deleted="false" description="print to standard out" enabled="true" id="org.eclipse.jdt.ui.templates.sysout" name="sysout">System.out.println(${word_selection}${});${cursor}</template><template autoinsert="true" context="java-statements" deleted="false" description="print to standard error" enabled="true" id="org.eclipse.jdt.ui.templates.syserr" name="syserr">System.err.println(${word_selection}${});${cursor}</template><template autoinsert="true" context="java-statements" deleted="false" description="print current method to standard out" enabled="true" id="org.eclipse.jdt.ui.templates.systrace" name="systrace">System.out.println("${enclosing_type}.${enclosing_method}()");</template><template autoinsert="false" context="java-statements" deleted="false" description="while loop with condition" enabled="true" id="org.eclipse.jdt.ui.templates.while_condition" name="while">while (${condition:var(boolean)}) {
	${line_selection}${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="$FALL-THROUGH$ marker" enabled="true" id="org.eclipse.jdt.ui.templates.fall-through" name="fall-through">//$$FALL-THROUGH$$</template><template autoinsert="false" context="java-statements" deleted="false" description="synchronized block" enabled="true" id="org.eclipse.jdt.ui.templates.synchronized" name="synchronized">synchronized (${mutex:var}) {
	${line_selection}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="explicit lock aquisition" enabled="true" id="org.eclipse.jdt.ui.templates.lock" name="lock">${lock:var(java.util.concurrent.locks.Lock)}.lock();
try {
	${line_selection}${cursor}
} finally {
	${lock}.unlock();
}</template><template autoinsert="false" context="java-statements" deleted="false" description="merge two arrays into one" enabled="true" id="org.eclipse.jdt.ui.templates.arraymerge" name="arraymerge">${array_type}[] ${result:newName(array1)} = new ${array_type}[${array1:array}.length + ${array}.length];
System.arraycopy(${array1}, 0, ${result}, 0, ${array1}.length);
System.arraycopy(${array}, 0, ${result}, ${array1}.length, ${array}.length);</template><template autoinsert="false" context="java-statements" deleted="false" description="add an element to an array" enabled="true" id="org.eclipse.jdt.ui.templates.arrayadd" name="arrayadd">${array_type}[] ${result:newName(array)} = new ${array_type}[${array}.length + 1];
System.arraycopy(${array}, 0, ${result}, 0, ${array}.length);
${result}[${array}.length]= ${var};</template><template autoinsert="true" context="java-statements" deleted="false" description="" enabled="true" name="formatOff"> // @formatter:off</template><template autoinsert="true" context="java-statements" deleted="false" description="" enabled="true" name="formatOn"> // @formatter:on</template><template autoinsert="false" context="java-members" deleted="false" description="main method" enabled="true" id="org.eclipse.jdt.ui.templates.main" name="main">public static void main(String[] args) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="public method" enabled="true" id="org.eclipse.jdt.ui.templates.public_method" name="public_method">public ${return_type} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="public static method" enabled="true" id="org.eclipse.jdt.ui.templates.public_static_method" name="public_static_method">public static ${return_type} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="protected method" enabled="true" id="org.eclipse.jdt.ui.templates.protected_method" name="protected_method">protected ${return_type} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="private method" enabled="true" id="org.eclipse.jdt.ui.templates.private_method" name="private_method">private ${return_type} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="private static method" enabled="true" id="org.eclipse.jdt.ui.templates.private_static_method" name="private_static_method">private static ${return_type} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="test method (JUnit 4)" enabled="true" id="org.eclipse.jdt.ui.templates.test_junit4" name="test">@${testType:newType(org.junit.Test)}
public void ${testName}() throws Exception {
	${staticImport:importStatic('org.assertj.core.api.Assertions.*')}${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="static final field" enabled="true" id="org.eclipse.jdt.ui.templates.static_final" name="static_final">${visibility:link('public ','protected ','','private ')}static final ${type:link(String,int)} ${NAME} = ${expr:link('""',0)};</template><template autoinsert="true" context="java-members" deleted="false" description="Stub out a new @Bean method" enabled="true" id="org.springframework.ide.eclipse.beans.ui.editor.templates.contextType.beanMethod" name="beanmethod">${x:import(org.springframework.context.annotation.Bean)}@Bean
public ${bean_type} ${bean_name}() {
	// TODO Auto generated method stub
	${cursor}return null;
}</template><template autoinsert="true" context="java-members" deleted="false" description="Create method that initializes the WebDataBinder which will be used for populating command and form object arguments of annotated handler methods" enabled="true" id="com.springsource.sts.quickfix.initBinder" name="InitBinder method">${:import(org.springframework.web.bind.annotation.InitBinder, org.springframework.web.bind.WebDataBinder)}@InitBinder
public void ${initBinder}(WebDataBinder ${binder}) {
	${line_selection}${cursor}
}</template><template autoinsert="true" context="java-members" deleted="false" description="Exception handling method" enabled="true" id="com.springsource.sts.quickfix.exceptionHandler" name="ExceptionHandler method">${:import(org.springframework.web.bind.annotation.ExceptionHandler)}@ExceptionHandler(${Exception}.class)
public ${void} ${handleException}(${Exception} ${exception}) {
	${line_selection}${cursor}
}</template><template autoinsert="true" context="java-members" deleted="false" description="GET HTTP method" enabled="true" id="com.springsource.sts.quickfix.getHandler" name="GET method">${x:import(org.springframework.web.bind.annotation.RequestMapping, org.springframework.web.bind.annotation.RequestMethod)}@RequestMapping(value="${cursor}${path}", method = RequestMethod.GET)
public ${String} ${get}(${Object} ${model}) {
	// TODO Auto generated method stub
	return null;
}</template><template autoinsert="true" context="java-members" deleted="false" description="POST HTTP method" enabled="true" id="com.springsource.sts.quickfix.postHandler" name="POST method">${x:import(org.springframework.web.bind.annotation.RequestMapping, org.springframework.web.bind.annotation.RequestMethod, org.springframework.validation.BindingResult)}@RequestMapping(value="${cursor}${path}", method = RequestMethod.POST)
public ${String} ${post}(${Object} ${formObject}, ${BindingResult} ${bindingResult}) {
	// TODO Auto generated method stub
	return null;
}</template><template autoinsert="true" context="java-members" deleted="false" description="PUT HTTP method" enabled="true" id="com.springsource.sts.quickfix.putHandler" name="PUT method">${x:import(org.springframework.web.bind.annotation.RequestMapping, org.springframework.web.bind.annotation.RequestMethod, org.springframework.validation.BindingResult)}@RequestMapping(value="${cursor}${path}", method = RequestMethod.PUT)
public ${String} ${post}(${Object} ${formObject}, ${BindingResult} ${bindingResult}) {
	// TODO Auto generated method stub
	return null;
}</template><template autoinsert="true" context="javadoc" deleted="false" description="active task" enabled="true" id="org.eclipse.mylyn.ide.ui.template.activeTask" name="active_task">${activeTaskPrefix}${activeTaskKey}</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag" name="&lt;code&gt;">&lt;code&gt;${word_selection}${}&lt;/code&gt;${cursor}</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;null&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag_null" name="null">&lt;code&gt;null&lt;/code&gt;</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;true&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag_true" name="true">&lt;code&gt;true&lt;/code&gt;</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;false&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag_false" name="false">&lt;code&gt;false&lt;/code&gt;</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;pre&gt;&lt;/pre&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.pre_tag" name="&lt;pre&gt;">&lt;pre&gt;${word_selection}${}&lt;/pre&gt;${cursor}</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;b&gt;&lt;/b&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.b_tag" name="&lt;b&gt;">&lt;b&gt;${word_selection}${}&lt;/b&gt;${cursor}</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;i&gt;&lt;/i&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.i_tag" name="&lt;i&gt;">&lt;i&gt;${word_selection}${}&lt;/i&gt;${cursor}</template><template autoinsert="true" context="javadoc" deleted="false" description="author name" enabled="true" id="org.eclipse.jdt.ui.templates.author" name="@author">@author ${user}</template></templates>